let sockets = []
{
    sockets = []
    let e = window.WebSocket
    window.WebSocket = function (...t) {
        let a = new e(...t)
        return sockets.push(a), a
    }
}
{
    let t = setInterval(() => {
            try {
                sockets.length > 0 && (clearInterval(t), s())
            } catch (e) {
                console.log('Error caught:', e)
            }
        }, 1e3),
        a = {},
        s = () => {
            let e = sockets[0].onmessage
            sockets[0].onmessage = (...t) => {
                e(...t)
                let s = JSON.parse(t?.[0]?.data)
                if (s?.messageType === 'FriendsFriendUpdated') {
                    let l = s.payload.data.friend.localRichPresenceAttributes?.find(e => 'currentGameName' === e.key)
                    l?.value &&
                        l.value !== a[s.payload.data.friend.battleTag] &&
                        ((a[s.payload.data.friend.battleTag] = l?.value),
                        sockets[0].onmessage({
                            data: JSON.stringify({
                                messageType: 'ChatMessage',
                                payload: {
                                    message: {
                                        content: `Your friend ${s.payload.data.friend.battleTag} entered a Warcraft III The Frozen Throne game called ${l.value}`,
                                        type: 'message',
                                        sender: '',
                                    },
                                },
                            }),
                        })),
                        (a[s.payload.data.friend.battleTag] = l?.value)
                }
            }
        }
}
setInterval(function () {
    for (let e of [
        ...document.getElementsByClassName('ChatFrame-Root'),
        ...document.getElementsByClassName('PlayerList-PopupMenu'),
    ])
        e.style.zoom = 'unset'
    let t = () =>
            Array.from(document.getElementsByTagName('input')).filter(e => !e.classList.contains('chat_focus_ignore')),
        a = document.getElementById('chatPanelInput')
    a &&
        (a.onblur = () => {
            1 === t().length && document.getElementById('chatPanelInput').focus()
        })
}, 1)
